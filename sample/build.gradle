/*
 * Copyright (c) 2019 Zac Sweers
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jetbrains.kotlin.kapt'
}

dependencies {
  kapt project(':moshi-sealed-codegen')
  kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.0-SNAPSHOT"

  implementation project(':moshi-sealed-annotations')
  implementation deps.kotlin.stdlibjdk8
  implementation "com.squareup.moshi:moshi-kotlin:1.9.0-SNAPSHOT"
  implementation project(':moshi-sealed-reflect')

  kaptTest project(':moshi-sealed-codegen')
  testCompile deps.test.junit
  testCompile deps.test.truth
}

kapt {
  arguments {
    arg("moshisealed.generated", "javax.annotation.Generated")
  }

  // Compiling with JDK 11+, but kapt doesn't forward source/target versions.
  javacOptions {
    option("-source", "8")
    option("-target", "8")
  }
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
    freeCompilerArgs = ['-Xjsr305=strict', '-progressive']
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
    freeCompilerArgs = ['-Xjsr305=strict', '-progressive', '-Xjvm-default=enable', '-Xuse-experimental=kotlin.Experimental']
  }
}
